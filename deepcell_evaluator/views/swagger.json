{
  "swagger": "2.0",
  "info": {
    "description": "This is the REST API Documentation for the Deepcell Evaluator Challange.",
    "version": "1.0.0",
    "title": "Deepcell REST API Docs",
    "contact": {
      "email": "raafaadg@gmail.com"
    }
  },
  "host": "xgor6ave4c.execute-api.us-east-1.amazonaws.com",
  "basePath": "/prod",
  "tags": [
    {
      "name": "ping",
      "description": "Ping Test"
    },
    {
      "name": "evaluate",
      "description": "Create an Evaluation"
    },
    {
      "name": "check",
      "description": "Check an Evaluation"
    },
    {
      "name": "update",
      "description": "Update an Evaluation"
    },
    {
      "name": "list",
      "description": "List all evaluation"
    },
    {
      "name": "delete",
      "description": "Delete an Evaluation"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/ping": {
      "post": {
        "tags": [
          "ping"
        ],
        "summary": "Ping Test",
        "description": "Ping test to check connection.",
        "operationId": "ping",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponseDefault"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    },
    "/evaluate": {
      "post": {
        "tags": [
          "evaluate"
        ],
        "summary": "Create an Evolution giving a sub and string",
        "description": "For valid response try no null values for sub and string, avoiding special chars.",
        "operationId": "createEvaluation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sub",
            "in": "query",
            "description": "sub to be evaluated",
            "required": true,
            "type": "string"
          },
          {
            "name": "string",
            "in": "query",
            "description": "string to be evaluated",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    },
    "/list": {
      "post": {
        "tags": [
          "list"
        ],
        "summary": "List all Evaluations",
        "description": "Will provide a max of 20 Evaluations",
        "operationId": "allEvaluations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Limit of evaluations to be fetched",
            "required": false,
            "type": "string",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid Limit Number"
          },
          "404": {
            "description": "List is Empty"
          }
        }
      }
    },
    "/update": {
      "post": {
        "tags": [
          "update"
        ],
        "summary": "Create a new Evaluation giving a sub and string",
        "description": "",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of evaluation to be deleted",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "sub",
            "description": "Pet object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Update"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/check": {
      "get": {
        "tags": [
          "check"
        ],
        "summary": "Check single Evaluation",
        "description": "Fetch evaluation from giving ID",
        "operationId": "getEvaluation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of evaluation to be fetched",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid ID Number"
          },
          "404": {
            "description": "ID not found"
          }
        }
      }
    },
    "/delete": {
      "delete": {
        "tags": [
          "delete"
        ],
        "summary": "Delete single Evaluation",
        "description": "Delete evaluation from giving ID",
        "operationId": "deleteEvaluation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of evaluation to be fetched",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiResponseDefault"
              }
            }
          },
          "400": {
            "description": "Invalid ID Number"
          },
          "404": {
            "description": "ID not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Evaluation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "sub": {
          "type": "string"
        },
        "string": {
          "type": "string"
        },
        "result": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "conditions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Update": {
      "type": "object",
      "properties": {
        "sub": {
          "type": "string"
        },
        "string": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Update"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "message": {
          "$ref": "#/definitions/Evaluation"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ApiResponseDefault": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about the Projet on GitHub",
    "url": "https://github.com/raafaadg/deepcell-evaluator/tree/production"
  }
}